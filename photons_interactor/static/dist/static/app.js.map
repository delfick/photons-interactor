{"version":3,"file":"static/app.js","sources":["webpack:///webpack/bootstrap","webpack:///./css/app.scss","webpack:///js/control/component.js","webpack:///js/dashboard.js","webpack:///js/device/component.js","webpack:///js/device/state.js","webpack:///js/error.js","webpack:///js/history.js","webpack:///js/hsk-to-color.js","webpack:///js/index.js","webpack:///js/page.js","webpack:///js/router.js","webpack:///js/selection/state.js","webpack:///js/store.js","webpack:///js/wheel/tween.js","webpack:///js/wheel/wheel.js","webpack:///js/wsclient.js"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// removed by extract-text-webpack-plugin","import { SelectionState } from \"../selection/state.js\";\nimport { ColourPicker } from \"../wheel/wheel.js\";\nimport { ShowError } from \"../error.js\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { throttle } from \"throttle-debounce\";\nimport { connect } from \"react-redux\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: \"relative\",\n    width: \"400px\"\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nconst Control = connect((state, ownProps) => ({\n  light_state: state.selection.light_state,\n  waiting: state.selection.waiting,\n  white: state.selection.white\n}))(({ dispatch, selection, light_state, white, waiting }) =>\n  <div>\n    {waiting\n      ? <CircularProgress size={100} />\n      : <div>\n          <List style={{ marginLeft: \"109px\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!white}\n              onClick={() => dispatch(SelectionState.ToggleWheel(false))}\n            >\n              Color\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={white}\n              onClick={() => dispatch(SelectionState.ToggleWheel(true))}\n            >\n              White\n            </Button>\n          </List>\n          <List>\n            <ColourPicker\n              style={{ marginLeft: \"50px\" }}\n              white={white}\n              on={light_state.on}\n              hue={light_state.hue}\n              width={300}\n              height={300}\n              brightness={light_state.brightness}\n              saturation={light_state.saturation}\n              kelvin={light_state.kelvin}\n              submit={throttle(300, false, (transform, components) =>\n                dispatch(SelectionState.ChangeState(transform, components))\n              )}\n            />\n          </List>\n        </div>}\n    <Divider />\n    <List>\n      {Object.keys(selection).map(serial =>\n        <Chip key={serial} label={serial} />\n      )}\n    </List>\n  </div>\n);\n\nconst paneconnect = connect((state, ownProps) => ({\n  selection: state.selection.selection,\n  error: state.selection.error\n}));\nconst Pane = paneconnect(({ classes, error, selection }) =>\n  <Drawer variant=\"permanent\" anchor=\"right\" className={classes.drawerPaper}>\n    <ShowError error={error} clearer={SelectionState.ClearError()} />\n    <div className={classes.toolbar} />\n    <div style={{ width: \"400px\", paddingTop: \"10px\", paddingLeft: \"10px\" }}>\n      <List>\n        <Typography variant=\"display2\">Control</Typography>\n        {Object.keys(selection).length == 0\n          ? <Typography variant=\"subheading\">\n              Click devices to control\n            </Typography>\n          : <Control selection={selection} />}{\" \"}\n      </List>\n    </div>\n  </Drawer>\n);\n\nexport const ControlPane = withStyles(styles)(Pane);\n","import { DevicesState } from \"./device/state.js\";\nimport { Bulb } from \"./device/component.js\";\nimport { ShowError } from \"./error.js\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n  devices: {\n    flexGrow: 1,\n    marginTop: \"10px\"\n  }\n});\n\nvar dashconnector = connect((state, ownProps) => ({\n  error: state.devices.error,\n  serials: state.devices.serials,\n  loading: state.devices.loading\n}));\nconst Dashboard = dashconnector(\n  ({ error, loading, serials, width, classes, spacing, dispatch }) =>\n    <div>\n      <Typography variant=\"display2\">Devices</Typography>\n      <ShowError error={error} clearer={DevicesState.ClearError()} />\n      <Grid container className={classes.devices} spacing={16}>\n        <Grid item xs={12}>\n          <Grid\n            container\n            className={classes.demo}\n            justify=\"center\"\n            spacing={16}\n          >\n            {loading ? <CircularProgress /> : null}\n            {serials.map(serial =>\n              <Grid key={serial} item>\n                <Bulb serial={serial} />\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Dashboard);\n","import { SelectionState } from \"../selection/state.js\";\n\nimport { connect } from \"react-redux\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\n\nconst styles = theme => ({\n  devices: {\n    flexGrow: 1,\n    marginTop: \"10px\"\n  }\n});\n\nvar bulbconnector = connect((state, ownProps) => ({\n  data: state.devices.devices[ownProps.serial],\n  selected: state.selection.selection[ownProps.serial]\n}));\nconst Bulb = bulbconnector(({ dispatch, serial, data, selected }) =>\n  <Card\n    data-cy=\"bulb\"\n    style={selected ? { backgroundColor: \"#0000ff14\" } : undefined}\n    onClick={() => {\n      dispatch(SelectionState.ToggleSelection({ serial }));\n    }}\n  >\n    <CardContent>\n      <Typography component=\"p\">\n        {serial}\n      </Typography>\n      {!data\n        ? <CircularProgress size={20} />\n        : <BulbData serial={serial} data={data} />}\n    </CardContent>\n  </Card>\n);\n\nconst BulbData = ({ serial, data }) =>\n  <Typography component=\"p\" data-cy=\"bulb-label\">\n    {data.label}\n  </Typography>;\n\nexport { Bulb };\n","import { WSCommand } from \"../wsclient.js\";\n\nimport { take, put, takeLatest } from \"redux-saga/effects\";\nimport { createAction, createReducer } from \"redux-act\";\n\nclass DevicesStateKls {\n  GetSerials = createAction(\"Get serials\", (refresh, other_args) => ({\n    args: { ...other_args, just_serials: true, refresh: refresh || false }\n  }));\n  GotSerials = createAction(\"Got serials\");\n\n  GetDetails = createAction(\"Get details\", (refresh, other_args) => ({\n    args: { ...other_args, refresh: refresh || false }\n  }));\n  GotDetails = createAction(\"Got details\");\n\n  DetailsError = createAction(\"Error getting information\");\n  ClearError = createAction(\"Clear the error\");\n\n  reducer() {\n    return createReducer(\n      {\n        [this.GotSerials]: (state, { serials }) => {\n          return { ...state, serials, loading: false };\n        },\n        [this.GotDetails]: (state, { devices }) => {\n          return {\n            ...state,\n            devices: devices || {},\n            loading: false\n          };\n        },\n        [this.DetailsError]: (state, { error }) => {\n          var errormsg = `${error.error_code}: ${JSON.stringify(error.error)}`;\n          return { ...state, error: errormsg, loading: false };\n        },\n        [this.ClearError]: (state, payload) => {\n          return { ...state, error: undefined };\n        }\n      },\n      {\n        serials: [],\n        error: undefined,\n        devices: {},\n        loading: true\n      }\n    );\n  }\n}\n\nexport const DevicesState = new DevicesStateKls();\n\nfunction* getDetailsSaga(original) {\n  var { payload } = original;\n  var onsuccess = ({ data }) => DevicesState.GotDetails({ devices: data });\n  var onerror = DevicesState.DetailsError;\n\n  yield put(\n    WSCommand(\n      \"/v1/lifx/command\",\n      {\n        command: \"discover\",\n        args: payload.args\n      },\n      { onsuccess, onerror, original }\n    )\n  );\n}\n\nfunction* getSerialsSaga(original) {\n  var { payload } = original;\n  var onsuccess = ({ data }) => DevicesState.GotSerials({ serials: data });\n  var onerror = DevicesState.DetailsError;\n\n  yield put(\n    WSCommand(\n      \"/v1/lifx/command\",\n      {\n        command: \"discover\",\n        args: { ...payload.args, just_serials: true }\n      },\n      { onsuccess, onerror, original }\n    )\n  );\n}\n\nexport function* deviceSaga() {\n  yield takeLatest(DevicesState.GetSerials, getSerialsSaga);\n  yield takeLatest(DevicesState.GetDetails, getDetailsSaga);\n}\n\nexport const fortests = { getDetailsSaga, getSerialsSaga };\n","import { connect } from \"react-redux\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nexport const ShowError = connect()(({ dispatch, error, clearer }) =>\n  <Snackbar\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    }}\n    open={error !== undefined}\n    onClose={() => dispatch(clearer)}\n    autoHideDuration={5000}\n    ContentProps={{\n      \"aria-describedby\": \"message-id\"\n    }}\n    action={[\n      <IconButton\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={() => dispatch(clearer)}\n      >\n        <CloseIcon />\n      </IconButton>\n    ]}\n    message={\n      <span id=\"message-id\">\n        {error}\n      </span>\n    }\n  />\n);\n","import createBrowserHistory from \"history/createBrowserHistory\";\nimport { createLink } from \"redux-saga-router/react\";\n\nexport const history = createBrowserHistory();\nexport const Link = createLink(history);\n","// Taken from http://stackoverflow.com/a/17243070\nexport default (hue, saturation, kelvin) => {\n  function HSLtoHSV(h, s, l) {\n    if (arguments.length === 1) {\n      (s = h.s), (l = h.l), (h = h.h);\n    }\n    var _h = h,\n      _s,\n      _v;\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    _v = (l + s) / 2;\n    _s = 2 * s / (l + s);\n\n    return {\n      h: _h,\n      s: _s,\n      v: _v\n    };\n  }\n\n  function HSVtoRGB(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n    if (arguments.length === 1) {\n      (s = h.s), (v = h.v), (h = h.h);\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        (r = v), (g = t), (b = p);\n        break;\n      case 1:\n        (r = q), (g = v), (b = p);\n        break;\n      case 2:\n        (r = p), (g = v), (b = t);\n        break;\n      case 3:\n        (r = p), (g = q), (b = v);\n        break;\n      case 4:\n        (r = t), (g = p), (b = v);\n        break;\n      case 5:\n        (r = v), (g = p), (b = q);\n        break;\n    }\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  }\n\n  function kelvinToRGB(kelvin) {\n    var temperature = kelvin / 100;\n    var red;\n    if (temperature <= 66) {\n      red = 255;\n    } else {\n      red = temperature - 60;\n      red = 329.698727446 * Math.pow(red, -0.1332047592);\n      if (red < 0) red = 0;\n      if (red > 255) red = 255;\n    }\n\n    var green;\n    if (temperature <= 66) {\n      green = temperature;\n      green = 99.4708025861 * Math.log(green) - 161.1195681661;\n      if (green < 0) green = 0;\n      if (green > 255) green = 255;\n    } else {\n      green = temperature - 60;\n      green = 288.1221695283 * Math.pow(green, -0.0755148492);\n      if (green < 0) green = 0;\n      if (green > 255) green = 255;\n    }\n\n    var blue;\n    if (temperature >= 66) {\n      blue = 255;\n    } else {\n      if (temperature <= 19) {\n        blue = 0;\n      } else {\n        blue = temperature - 10;\n        blue = 138.5177312231 * Math.log(blue) - 305.0447927307;\n        if (blue < 0) blue = 0;\n        if (blue > 255) blue = 255;\n      }\n    }\n\n    return [red, green, blue];\n  }\n\n  if (saturation > 0.0) {\n    return \"hsl(\" + hue + \", \" + saturation * 100 + \"%, 50%)\";\n  } else {\n    var color = kelvinToRGB(kelvin);\n    return (\n      \"rgb(\" +\n      Math.round(color[0]) +\n      \", \" +\n      Math.round(color[1]) +\n      \", \" +\n      Math.round(color[2]) +\n      \")\"\n    );\n  }\n};\n","// Do polyfills, must happen first\nimport \"babel-core/register\";\nimport \"babel-polyfill\";\n\nimport { routerFork, Routes } from \"./router.js\";\nimport { listen } from \"./wsclient.js\";\nimport { history } from \"./history.js\";\nimport {\n  makeReducer,\n  makeSagaMiddleware,\n  makeStore,\n  runSagaMiddleware\n} from \"./store.js\";\n\nimport { fork, call } from \"redux-saga/effects\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"typeface-roboto\";\n\nconst reducer = makeReducer();\nconst sagaMiddleware = makeSagaMiddleware();\nconst store = makeStore(reducer, sagaMiddleware);\nrunSagaMiddleware(sagaMiddleware);\n\nwindow.ReactDOM = ReactDOM;\nwindow.Page = (\n  <Provider store={store}>\n    <Routes history={history} />\n  </Provider>\n);\n\nvar scheme = \"ws\";\nif (window.location.protocol.startsWith(\"https\")) {\n  scheme = \"wss\";\n}\nvar url =\n  scheme +\n  \"://\" +\n  window.location.hostname +\n  \":\" +\n  String(window.location.port) +\n  \"/v1/ws\";\n\nfunction* mainSaga() {\n  yield fork(listen, url);\n  yield routerFork(history);\n}\n\nsagaMiddleware.run(mainSaga);\n","import { ControlPane } from \"./control/component.js\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 430,\n    zIndex: 1,\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100vh\"\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n    minWidth: 0 // So the Typography noWrap works\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbar: theme.mixins.toolbar,\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  }\n});\n\nconst Page = ({ width, children, classes }) => {\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"title\" color=\"inherit\" noWrap>\n              Interactor\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {children}\n        </main>\n        <ControlPane />\n      </div>\n    </div>\n  );\n};\n\nPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withWidth()(withStyles(styles)(Page));\n","import { DevicesState } from \"./device/state.js\";\nimport Dashboard from \"./dashboard.js\";\nimport Page from \"./page.js\";\n\nimport { Router, Route, Switch } from \"react-router\";\nimport { fork, put } from \"redux-saga/effects\";\nimport { router } from \"redux-saga-router\";\n\nexport const routes = {\n  \"/\": function* indexSaga() {\n    yield put(DevicesState.GetSerials());\n    yield put(DevicesState.GetDetails());\n  }\n};\n\nexport const routerFork = history => fork(router, history, routes);\n\nexport const Routes = ({ history }) =>\n  <Router history={history}>\n    <Page>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n      </Switch>\n    </Page>\n  </Router>;\n","import { WSCommand } from \"../wsclient.js\";\n\nimport { take, put, takeLatest, select, call } from \"redux-saga/effects\";\nimport { createAction, createReducer } from \"redux-act\";\nimport { delay } from \"redux-saga\";\n\nclass SelectionStateKls {\n  SetPower = createAction(\"Set power\", power => ({\n    transform: { power: power ? \"on\" : \"off\" }\n  }));\n\n  ChangeState = createAction(\"Change state\", (transform, components) => ({\n    transform,\n    components\n  }));\n\n  GotState = createAction(\"Got state from a light\");\n\n  StartWaiting = createAction(\"Start waiting\");\n  StopWaiting = createAction(\"Stop waiting\");\n\n  ToggleWheel = createAction(\"Toggle the wheel\", white => ({ white }));\n\n  ToggleSelection = createAction(\"Toggle a selection\");\n  StateChangeError = createAction(\"Error changing state\");\n\n  ClearError = createAction(\"Clear error\");\n\n  reducer() {\n    return createReducer(\n      {\n        [this.ToggleSelection]: (state, { serial }) => {\n          var selection = { ...state.selection };\n          if (selection[serial]) {\n            delete selection[serial];\n          } else {\n            selection[serial] = true;\n          }\n          return {\n            ...state,\n            selection,\n            state_number: state.state_number + 1,\n            waiting: Object.keys(selection) === 0,\n            light_state: { ...state.light_state, ...state.light_state_buf }\n          };\n        },\n        [this.StartWaiting]: (state, payload) => {\n          return { ...state, waiting: true };\n        },\n        [this.StopWaiting]: (state, { state_number }) => {\n          var waiting = state.waiting;\n          if (state_number === state.state_number) {\n            waiting = false;\n          }\n          return {\n            ...state,\n            waiting,\n            state_number: state.state_number + 1\n          };\n        },\n        [this.ToggleWheel]: (state, { white }) => {\n          return {\n            ...state,\n            white,\n            light_state: { ...state.light_state, ...state.light_state_buf }\n          };\n        },\n        [this.GotState]: (state, { state_number, serial, data }) => {\n          if (state.state_number !== state_number) {\n            return state;\n          }\n\n          var serials = Object.keys(state.selection);\n          if (serials.length !== 1 || serials[0] !== serial) {\n            return state;\n          }\n\n          return {\n            ...state,\n            light_state: data,\n            light_state_buf: data,\n            waiting: false\n          };\n        },\n        [this.StateChangeError]: (state, { error, error_code }) => {\n          var errormsg = `${error_code}: ${JSON.stringify(error)}`;\n          return { ...state, error: errormsg };\n        },\n        [this.ClearError]: (state, payload) => {\n          return { ...state, error: undefined };\n        },\n        [this.ChangeState]: (state, { components }) => {\n          return {\n            ...state,\n            state_number: state.state_number + 1,\n            light_state_buf: { ...state.light_state_buf, ...components }\n          };\n        }\n      },\n      {\n        selection: {},\n        error: undefined,\n        light_state_buf: {},\n        state_number: 0,\n        white: false,\n        waiting: false,\n        light_state: {\n          on: true,\n          hue: 0,\n          saturation: 1,\n          brightness: 0.5,\n          kelvin: 3500\n        }\n      }\n    );\n  }\n}\n\nexport const SelectionState = new SelectionStateKls();\n\nfunction* setTransformSaga(original) {\n  var { payload } = original;\n  var onerror = SelectionState.StateChangeError;\n\n  var state = yield select();\n  var selection = state.selection.selection;\n  var matcher = { serial: Object.keys(selection) };\n\n  yield put(\n    WSCommand(\n      \"/v1/lifx/command\",\n      {\n        command: \"transform\",\n        args: { matcher, transform: payload.transform }\n      },\n      { onerror, original }\n    )\n  );\n}\n\nfunction* askForDetailsSaga(original) {\n  var state = yield select();\n  var selection = Object.keys(state.selection.selection);\n  if (selection.length !== 1) {\n    return;\n  }\n\n  var serial = selection[0];\n  yield put(SelectionState.StartWaiting());\n\n  var state = yield select();\n  var state_number = state.selection.state_number;\n\n  var onsuccess = ({ data }) => {\n    var results = data.results[serial];\n    if (results) {\n      var payload = results.payload;\n      var { hue, saturation, brightness, kelvin } = payload;\n      var data = {\n        on: payload.power !== 0,\n        hue,\n        saturation,\n        brightness,\n        kelvin\n      };\n      return SelectionState.GotState({ data, serial, state_number });\n    }\n  };\n\n  var onerror = ({ error }) => console.error(error);\n\n  yield put(\n    WSCommand(\n      \"/v1/lifx/command\",\n      {\n        command: \"query\",\n        args: { matcher: { serial }, pkt_type: \"GetColor\" }\n      },\n      { onerror, onsuccess, original }\n    )\n  );\n\n  yield call(delay, 1000);\n  yield put(SelectionState.StopWaiting({ state_number }));\n}\n\nexport function* selectionSaga() {\n  yield takeLatest(\n    [SelectionState.SetPower, SelectionState.ChangeState],\n    setTransformSaga\n  );\n  yield takeLatest(SelectionState.ToggleSelection, askForDetailsSaga);\n}\n","import { DevicesState, deviceSaga } from \"./device/state.js\";\nimport { SelectionState, selectionSaga } from \"./selection/state.js\";\n\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { combineReducers } from \"redux\";\n\nexport const makeReducer = extra => {\n  return combineReducers({\n    ...extra,\n    devices: DevicesState.reducer(),\n    selection: SelectionState.reducer()\n  });\n};\n\nexport const makeSagaMiddleware = () => {\n  return createSagaMiddleware();\n};\n\nexport const makeStore = (reducer, sagaMiddleware) => {\n  const creator = applyMiddleware(sagaMiddleware)(createStore);\n  return creator(reducer, devToolsEnhancer());\n};\n\nexport const runSagaMiddleware = sagaMiddleware => {\n  sagaMiddleware.run(deviceSaga);\n  sagaMiddleware.run(selectionSaga);\n};\n","//\n//\n//  Copied from https://github.com/chenglou/react-tween-state\n//\n//\n\nimport { easeInOutQuad } from \"tween-functions\";\nimport requestAnimationFrame from \"raf\";\n\n// additive is the new iOS 8 default. In most cases it simulates a physics-\n// looking overshoot behavior (especially with easeInOut. You can test that in\n// the example\nconst DEFAULT_STACK_BEHAVIOR = \"ADDITIVE\";\nconst DEFAULT_EASING = easeInOutQuad;\nconst DEFAULT_DURATION = 300;\nconst DEFAULT_DELAY = 0;\n\nconst stackBehavior = {\n  ADDITIVE: \"ADDITIVE\",\n  DESTRUCTIVE: \"DESTRUCTIVE\"\n};\n\nexport default class Tweener {\n  constructor(wheel) {\n    this.wheel = wheel;\n    this._rafID = null;\n  }\n\n  getInitialState() {\n    return {\n      tweenQueue: []\n    };\n  }\n\n  componentWillUnmount() {\n    requestAnimationFrame.cancel(this._rafID);\n    this._rafID = -1;\n  }\n\n  tweenState(\n    path,\n    {\n      easing,\n      duration,\n      delay,\n      beginValue,\n      endValue,\n      onEnd,\n      stackBehavior: configSB\n    }\n  ) {\n    this.wheel.setState(state => {\n      let cursor = state;\n      let stateName;\n      // see comment below on pash hash\n      let pathHash;\n      if (typeof path === \"string\") {\n        stateName = path;\n        pathHash = path;\n      } else {\n        for (let i = 0; i < path.length - 1; i++) {\n          cursor = cursor[path[i]];\n        }\n        stateName = path[path.length - 1];\n        pathHash = path.join(\"|\");\n      }\n      // see the reasoning for these defaults at the top of file\n      const newConfig = {\n        easing: easing || DEFAULT_EASING,\n        duration: duration == null ? DEFAULT_DURATION : duration,\n        delay: delay == null ? DEFAULT_DELAY : delay,\n        beginValue: beginValue == null ? cursor[stateName] : beginValue,\n        endValue: endValue,\n        onEnd: onEnd,\n        stackBehavior: configSB || DEFAULT_STACK_BEHAVIOR\n      };\n\n      let newTweenQueue = state.tweenQueue;\n      if (newConfig.stackBehavior === stackBehavior.DESTRUCTIVE) {\n        newTweenQueue = state.tweenQueue.filter(\n          item => item.pathHash !== pathHash\n        );\n      }\n\n      // we store path hash, so that during value retrieval we can use hash\n      // comparison to find the path. See the kind of shitty thing you have to\n      // do when you don't have value comparison for collections?\n      newTweenQueue.push({\n        pathHash: pathHash,\n        config: newConfig,\n        initTime: Date.now() + newConfig.delay\n      });\n\n      // sorry for mutating. For perf reasons we don't want to deep clone.\n      // guys, can we please all start using persistent collections so that\n      // we can stop worrying about nonesense like this\n      cursor[stateName] = newConfig.endValue;\n      if (newTweenQueue.length === 1) {\n        this._rafID = requestAnimationFrame(this._rafCb.bind(this));\n      }\n\n      // this will also include the above mutated update\n      return { tweenQueue: newTweenQueue };\n    });\n  }\n\n  getTweeningValue(path) {\n    const state = this.wheel.state;\n\n    let tweeningValue;\n    let pathHash;\n    if (typeof path === \"string\") {\n      tweeningValue = state[path];\n      pathHash = path;\n    } else {\n      tweeningValue = state;\n      for (let i = 0; i < path.length; i++) {\n        tweeningValue = tweeningValue[path[i]];\n      }\n      pathHash = path.join(\"|\");\n    }\n    let now = Date.now();\n\n    for (let i = 0; i < state.tweenQueue.length; i++) {\n      const { pathHash: itemPathHash, initTime, config } = state.tweenQueue[i];\n      if (itemPathHash !== pathHash) {\n        continue;\n      }\n\n      const progressTime =\n        now - initTime > config.duration\n          ? config.duration\n          : Math.max(0, now - initTime);\n      // `now - initTime` can be negative if initTime is scheduled in the\n      // future by a delay. In this case we take 0\n\n      // if duration is 0, consider that as jumping to endValue directly. This\n      // is needed because the easing functino might have undefined behavior for\n      // duration = 0\n      const easeValue =\n        config.duration === 0\n          ? config.endValue\n          : config.easing(\n              progressTime,\n              config.beginValue,\n              config.endValue,\n              config.duration\n              // TODO: some funcs accept a 5th param\n            );\n      const contrib = easeValue - config.endValue;\n      tweeningValue += contrib;\n    }\n\n    return tweeningValue;\n  }\n\n  _rafCb() {\n    const state = this.wheel.state;\n    if (state.tweenQueue.length === 0) {\n      return;\n    }\n\n    const now = Date.now();\n    let newTweenQueue = [];\n\n    for (let i = 0; i < state.tweenQueue.length; i++) {\n      const item = state.tweenQueue[i];\n      const { initTime, config } = item;\n      if (now - initTime < config.duration) {\n        newTweenQueue.push(item);\n      } else {\n        config.onEnd && config.onEnd();\n      }\n    }\n\n    // onEnd might trigger a parent callback that removes this component\n    // -1 means we've canceled it in componentWillUnmount\n    if (this._rafID === -1) {\n      return;\n    }\n\n    this.wheel.setState({\n      tweenQueue: newTweenQueue\n    });\n\n    this._rafID = requestAnimationFrame(this._rafCb.bind(this));\n  }\n}\n","/*\n * This work is licensed under NonCommercial-ShareAlike 4.0 International\n * (CC BY-NC-SA 4.0). The 'LIFX Colour Wheel' patented design as intellectual\n * property is used in this repository.\n *\n * LIFX has granted permission to use the 'LIFX Colour Wheel' design conditional\n * on use of the (CC BY-NC-SA 4.0) license.\n *\n * Commercial use the 'LIFX Colour Wheel' requires written consent from LIFX.\n * Submit enquiries to business@lifx.com\n */\n\nimport hskToColor from \"../hsk-to-color.js\";\nimport Tweener from \"./tween.js\";\n\nimport easingTypes from \"tween-functions\";\nimport React from \"react\";\nimport {\n  Stage,\n  Line,\n  Layer,\n  Rect,\n  Group,\n  Text,\n  Circle,\n  Wedge,\n  Arc\n} from \"react-konva\";\n\nconst whites = [\n  [1500, \"Candlelight\"],\n  [2000, \"Sunset\"],\n  [2500, \"Ultra Warm\"],\n  [2750, \"Incandescent\"],\n  [3000, \"Warm\"],\n  [3200, \"Neutral Warm\"],\n  [3500, \"Neutral\"],\n  [4000, \"Cool\"],\n  [4500, \"Cool Daylight\"],\n  [5000, \"Soft Daylight\"],\n  [5500, \"Daylight\"],\n  [6000, \"Noon Daylight\"],\n  [6500, \"Bright Daylight\"],\n  [7000, \"Cloudy Daylight\"],\n  [7500, \"Blue Daylight\"],\n  [8000, \"Blue Overcast\"],\n  [8500, \"Blue Water\"],\n  [9000, \"Blue Ice\"]\n];\n\nconst normaldwhites = [whites[0]];\nfor (let i = 0; i < whites.length - 1; i++) {\n  let diff = whites[i + 1][0] - whites[i][0];\n  normaldwhites.push([\n    Math.round(whites[i + 1][0] - diff / 2),\n    whites[i + 1][1]\n  ]);\n}\n\nfunction angle_to_kelvin(angle) {\n  return Math.round(1500 + (9000 - 1500) * (angle / 360));\n}\n\nfunction kelvin_to_angle(kelvin) {\n  return (kelvin - 1500) * 360 / (9000 - 1500);\n}\n\nfunction normal_hue(hue) {\n  while (hue < 0) {\n    hue += 360;\n  }\n  return hue % 360;\n}\n\nfunction getPos(el) {\n  for (\n    var lx = 0, ly = 0;\n    el != null;\n    lx += el.offsetLeft, ly += el.offsetTop, el = el.offsetParent\n  );\n  return { x: lx, y: ly };\n}\n\nclass Power extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { on: props.on };\n    props.events.onPowerChange = ::this.clicked;\n  }\n\n  clicked(click) {\n    const new_on = !this.state.on;\n    if (click !== false) {\n      this.props.onClick();\n    }\n    this.setState({ on: new_on });\n  }\n\n  render() {\n    const { center_x, center_y, inner_radius, outer_radius } = this.props;\n    const arc_top = this.props.height - (outer_radius - inner_radius) / 2 - 5;\n    return (\n      <Group>\n        <Arc\n          onClick={::this.clicked}\n          angle={70}\n          rotation={90 - 35}\n          x={center_x}\n          y={center_y}\n          fill=\"#4d5866\"\n          innerRadius={inner_radius}\n          outerRadius={outer_radius}\n        />\n        <Arc\n          onClick={::this.clicked}\n          x={this.props.width / 2}\n          y={arc_top}\n          angle={280}\n          rotation={-90 + 40}\n          innerRadius={12}\n          outerRadius={15}\n          fill={this.state.on ? \"#009EFD\" : \"white\"}\n        />\n        <Line\n          onClick={::this.clicked}\n          points={[\n            this.props.width / 2,\n            arc_top - 10,\n            this.props.width / 2,\n            arc_top\n          ]}\n          stroke={this.state.on ? \"#009EFD\" : \"white\"}\n          strokeWidth={3}\n        />\n      </Group>\n    );\n  }\n}\n\nclass DraggableArc extends React.Component {\n  clickArcs(e) {\n    const offset = getPos(e.target.getStage().attrs.container);\n    const s_x = e.evt.clientX - offset.x;\n    const s_y = e.evt.clientY - offset.y;\n\n    var nodes = e.target.getParent().getChildren();\n    var point = { x: s_x, y: s_y };\n\n    var hue = 0;\n    for (var i = 0; i <= 360; i++) {\n      if (nodes[i].intersects(point)) {\n        hue = nodes[i].attrs.rotation;\n        break;\n      }\n    }\n    this.props.onClick(hue);\n  }\n\n  render() {\n    const {\n      hue,\n      on,\n      center_x,\n      center_y,\n      inner_radius,\n      outer_radius,\n      white\n    } = this.props;\n\n    const arcs = [];\n    for (var angle = 0; angle <= 360; angle += 1) {\n      var color = \"hsl(\" + angle + \", \" + (on ? 100 : 30) + \"%, 50%)\";\n      if (white) {\n        color = hskToColor(angle, 0, angle_to_kelvin(angle));\n      }\n      arcs.push(\n        <Arc\n          key={angle}\n          angle={3}\n          rotation={angle}\n          x={center_x}\n          y={center_y}\n          innerRadius={inner_radius}\n          outerRadius={outer_radius}\n          fill={color}\n        />\n      );\n    }\n\n    var cover_circle_gradient_stops = [\n      0,\n      on ? \"white\" : \"rgba(255,255,255,0)\",\n      1,\n      \"rgba(255,255,255,0)\"\n    ];\n    if (white) {\n      let black_cover = on ? \"rgba(255,255,255,0\" : \"rgba(0,0,0,0.3)\";\n      cover_circle_gradient_stops = [0, black_cover, 1, black_cover];\n    }\n\n    return (\n      <Group\n        ref={o => {\n          this.props.refs.draggable_arcs = o;\n        }}\n        draggable={true}\n        dragBoundFunc={pos => ({ x: center_x, y: center_y })}\n        onDragStart={this.props.onDragStart}\n        onDragMove={this.props.onDragMove}\n        onDragEnd={this.props.onDragEnd}\n        offset={{ x: center_x, y: center_y }}\n        rotation={-((hue + 90) % 360)}\n        x={center_x}\n        y={center_y}\n      >\n        {arcs}\n        <Arc\n          angle={360}\n          x={center_x}\n          y={center_y}\n          onClick={::this.clickArcs}\n          innerRadius={inner_radius}\n          outerRadius={outer_radius}\n          fillRadialGradientStartRadius={inner_radius}\n          fillRadialGradientEndRadius={outer_radius}\n          fillRadialGradientColorStops={cover_circle_gradient_stops}\n        />\n      </Group>\n    );\n  }\n}\n\nclass Brightness extends React.Component {\n  componentDidMount() {\n    this.props.refs.brightness_lines.move({\n      x: 0,\n      y: -(this.props.height * this.props.brightness)\n    });\n  }\n\n  render() {\n    const {\n      refs,\n      brightness,\n      height,\n      center_x,\n      center_y,\n      inner_radius,\n      outer_radius\n    } = this.props;\n\n    const pos_y = center_y - height * brightness;\n\n    const lines = [];\n    for (let i = 0; i < 16; i++) {\n      let y = i * (this.props.height / 15) + pos_y;\n      let l = 100 - Math.round(100 * Math.abs(y - center_y) / center_y);\n      let stroke = \"hsl(0,0%,\" + l + \"%)\";\n      lines.push({ i, y, stroke });\n    }\n\n    return (\n      <Group>\n        <Group\n          clipFunc={ctx => {\n            ctx.arc(center_x, center_y, inner_radius, 0, Math.PI * 2, false);\n          }}\n        >\n          <Circle\n            x={center_x}\n            y={center_y}\n            radius={inner_radius}\n            fillRadialGradientStartRadius={inner_radius}\n            fillRadialGradientEndRadius={outer_radius}\n            fillRadialGradientColorStops={[0, \"#6e7d91\", 1, \"#4d5866\"]}\n            fillRadialGradientStartPoint={{\n              x: 0,\n              y: 0\n            }}\n            fillRadialGradientEndPoint={{\n              x: 90,\n              y: 90\n            }}\n          />\n          <Group\n            ref={o => {\n              refs.brightness_lines = o;\n            }}\n            draggable={true}\n            dragBoundFunc={pos => {\n              let y = pos.y;\n              if (y > -(this.props.height * 0.01)) {\n                y = -(this.props.height * 0.01);\n              }\n\n              if (y < -this.props.height) {\n                y = -this.props.height;\n              }\n\n              return { x: 0, y: y };\n            }}\n            onDragMove={this.props.onDragMove}\n          >\n            <Rect\n              x={0}\n              y={0}\n              width={this.props.width}\n              height={this.props.height * 3}\n            />\n          </Group>\n          <Group>\n            {lines.map(l =>\n              <Line\n                key={l.i}\n                points={[center_x - 10, l.y, center_x + 10, l.y]}\n                stroke={l.stroke}\n                strokeWidth={1}\n              />\n            )}\n          </Group>\n        </Group>\n      </Group>\n    );\n  }\n}\n\nclass SaturationControl extends React.Component {\n  render() {\n    const {\n      center_x,\n      center_y,\n      inner_radius,\n      outer_radius,\n      on,\n      hue,\n      saturation\n    } = this.props;\n\n    var l = 1 - saturation;\n    if (l > 0.8) {\n      l = 0.8;\n    }\n    const white_color = \"rgba(255,255,255,\" + l + \")\";\n\n    const color = \"hsl(\" + hue + \",100%,50%)\";\n    const min_y = 15;\n    const max_y = center_y - inner_radius - 15;\n    const y_pos = max_y - (max_y - min_y) * saturation;\n\n    return (\n      <Layer>\n        <Line\n          points={[\n            center_x,\n            center_y - outer_radius,\n            center_x,\n            center_y - inner_radius\n          ]}\n          stroke=\"black\"\n          strokeWidth={3}\n        />\n        <Circle\n          x={center_x}\n          y={y_pos}\n          radius={15}\n          fill={color}\n          stroke={on ? \"white\" : \"black\"}\n          strokeWidth={2}\n        />\n        <Circle\n          ref={o => {\n            this.props.refs.saturation_circle = o;\n          }}\n          draggable={true}\n          dragBoundFunc={pos => {\n            let y = pos.y;\n\n            let min_y = 15;\n            if (y < min_y) {\n              y = min_y;\n            }\n\n            let max_y = center_y - inner_radius - 15;\n            if (y > max_y) {\n              y = max_y;\n            }\n\n            return { x: center_x, y: y };\n          }}\n          onDragMove={this.props.onDragMove}\n          x={center_x}\n          y={y_pos}\n          radius={15}\n          fill={white_color}\n          stroke={on ? \"white\" : \"black\"}\n          strokeWidth={2}\n        />\n      </Layer>\n    );\n  }\n}\n\nexport class ColourPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tweener = new Tweener(this);\n\n    let hue = props.hue;\n    if (props.white) {\n      hue = kelvin_to_angle(props.kelvin);\n    }\n\n    this.state = Object.assign(\n      {},\n      {\n        hue: hue,\n        on: props.on,\n        saturation: props.saturation,\n        brightness: props.brightness\n      },\n      this.tweener.getInitialState()\n    );\n    this.events = {};\n\n    this.last_angle = -hue * (Math.PI / 180);\n\n    this.extra_refs = {};\n\n    this.inner_radius = Math.round(this.props.height / 3.5);\n    this.outer_radius = Math.round(this.props.height / 2);\n    this.center_x = this.props.width / 2;\n    this.center_y = this.props.height / 2;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let { kelvin, hue, on, saturation, brightness, white } = props;\n    let isnewprops =\n      state.oldprops === undefined ||\n      (hue !== state.oldprops.hue ||\n        on !== state.oldprops.on ||\n        saturation !== state.oldprops.saturation ||\n        brightness !== state.oldprops.brightness ||\n        kelvin !== state.oldprops.kelvin ||\n        white !== state.oldprops.white);\n\n    if (isnewprops) {\n      var colorhue = state.colorhue;\n\n      if (white) {\n        colorhue = hue;\n        hue = kelvin_to_angle(kelvin);\n      } else {\n        hue = state.colorhue || hue;\n      }\n\n      return {\n        hue,\n        on,\n        colorhue,\n        saturation,\n        brightness,\n        isnewprops,\n        oldprops: props\n      };\n    }\n\n    return { isnewprops };\n  }\n\n  componentDidUpdate() {\n    if (this.state.isnewprops) {\n      this.last_angle = -this.state.hue * (Math.PI / 180);\n    }\n  }\n\n  componentWillUnmount() {\n    this.tweener.componentWillUnmount();\n  }\n\n  submit(payload) {\n    var args = { duration: 0.3 };\n    var components = {};\n\n    if (\n      payload.hue !== undefined ||\n      payload.saturation != undefined ||\n      payload.brightness != undefined\n    ) {\n      let hueval = payload.hue || this.state.hue;\n      components.saturation = payload.saturation || this.state.saturation;\n      components.brightness = payload.brightness || this.state.brightness;\n\n      const sat = components.saturation.toFixed(2);\n      const bright = components.brightness.toFixed(2);\n\n      if (this.props.white) {\n        components.kelvin = angle_to_kelvin(hueval);\n        args.color =\n          \"saturation:0 kelvin:\" + components.kelvin + \" brightness:\" + bright;\n      } else {\n        components.hue = normal_hue(hueval);\n        args.color =\n          \"hue:\" +\n          components.hue.toFixed(2) +\n          \" saturation:\" +\n          sat +\n          \" brightness:\" +\n          bright;\n      }\n    }\n\n    if (payload.power !== undefined) {\n      args.power = payload.power ? \"on\" : \"off\";\n    } else if (!this.state.on) {\n      args.power = \"on\";\n      this.setState({ on: true });\n      this.events.onPowerChange(false);\n    }\n\n    if (args.power !== undefined) {\n      components.on = args.power === \"on\";\n    }\n\n    this.props.submit(args, components);\n  }\n\n  power_clicked() {\n    const new_on = !this.state.on;\n    this.setState({ on: new_on });\n    this.submit({ power: new_on });\n  }\n\n  dragstart(e) {\n    const offset = getPos(e.target.getStage().attrs.container);\n    this.h_x = e.evt.clientX - offset.x;\n    this.h_y = e.evt.clientY - offset.y;\n  }\n\n  dragmove(e) {\n    const offset = getPos(e.target.getStage().attrs.container);\n    const s_x = e.evt.clientX - offset.x;\n    const s_y = e.evt.clientY - offset.y;\n    var s_rad = Math.atan2(s_y - this.center_y, s_x - this.center_x);\n    s_rad -= Math.atan2(this.h_y - this.center_y, this.h_x - this.center_x);\n    s_rad += this.last_angle;\n    const hue = normal_hue(-(s_rad * (180 / Math.PI)));\n    this.setState({ hue });\n    this.submit({ hue });\n  }\n\n  dragend(e) {\n    const offset = getPos(e.target.getStage().attrs.container);\n    const s_x = e.evt.clientX - offset.x;\n    const s_y = e.evt.clientY - offset.y;\n\n    var s_rad = Math.atan2(s_y - this.center_y, s_x - this.center_x);\n    s_rad -= Math.atan2(this.h_y - this.center_y, this.h_x - this.center_x);\n    s_rad += this.last_angle;\n    this.last_angle = s_rad;\n  }\n\n  drag_brightness(e) {\n    const brightness = -(\n      this.extra_refs.brightness_lines.attrs.y / this.props.height\n    );\n    this.setState({ brightness });\n    this.submit({ brightness });\n  }\n\n  drag_saturation(e) {\n    const min_y = 15;\n    const max_y = this.center_y - this.inner_radius - 15;\n\n    const saturation =\n      (max_y - this.extra_refs.saturation_circle.attrs.y) / (max_y - min_y);\n\n    this.setState({ saturation });\n    this.submit({ saturation });\n  }\n\n  clickColours(hue) {\n    var to_hue = hue;\n    if (this.state.hue < hue && hue - this.state.hue > 180) {\n      to_hue = hue - 360;\n    } else if (this.state.hue > hue && this.state.hue - hue > 180) {\n      to_hue = hue + 360;\n    }\n\n    this.tweener.tweenState(\"hue\", {\n      easing: easingTypes.easeInOutQuad,\n      duration: 500,\n      endValue: to_hue,\n      onEnd: () => this.setState({ hue })\n    });\n    this.submit({ hue });\n\n    // And make sure when we start dragging again\n    // It continues from the same place\n    this.last_angle = -hue * (Math.PI / 180);\n  }\n\n  render() {\n    const hue = this.tweener.getTweeningValue(\"hue\");\n    const brightness = Math.round(this.state.brightness * 100);\n    const kelvin = angle_to_kelvin(hue);\n\n    let text =\n      \"Color \" + Math.round(normal_hue(hue)) + \"° - \" + brightness + \"%\";\n    if (this.props.white) {\n      text = \"Kelvin \" + kelvin + \" - \" + brightness + \"%\";\n    }\n\n    let kelvinText = \"\";\n    if (this.props.white) {\n      for (var i = 0; i < normaldwhites.length; i++) {\n        if (kelvin >= normaldwhites[i][0]) {\n          kelvinText = normaldwhites[i][1];\n        }\n      }\n    }\n\n    var style = this.props.style || {};\n    return (\n      <div style={style}>\n        <Stage width={this.props.width} height={this.props.white ? 60 : 30}>\n          <Layer>\n            <Text\n              fontSize={24}\n              text={text}\n              align=\"center\"\n              width={this.props.width}\n            />\n            {this.props.white\n              ? <Text\n                  y={30}\n                  fontSize={24}\n                  text={kelvinText}\n                  align=\"center\"\n                  width={this.props.width}\n                />\n              : null}\n          </Layer>\n        </Stage>\n        <Stage width={this.props.width} height={this.props.height}>\n          <Layer>\n            <Brightness\n              refs={this.extra_refs}\n              center_x={this.center_x}\n              center_y={this.center_y}\n              inner_radius={this.inner_radius}\n              width={this.props.width}\n              height={this.props.height}\n              brightness={this.state.brightness}\n              onDragMove={::this.drag_brightness}\n            />\n          </Layer>\n          <Layer>\n            <DraggableArc\n              white={this.props.white}\n              on={this.state.on}\n              hue={this.tweener.getTweeningValue(\"hue\")}\n              inner_radius={this.inner_radius}\n              outer_radius={this.outer_radius}\n              refs={this.extra_refs}\n              center_x={this.center_x}\n              center_y={this.center_y}\n              onClick={::this.clickColours}\n              onDragStart={::this.dragstart}\n              onDragMove={::this.dragmove}\n              onDragEnd={::this.dragend}\n            />\n            <Power\n              on={this.state.on}\n              onClick={::this.power_clicked}\n              events={this.events}\n              width={this.props.width}\n              height={this.props.height}\n              center_x={this.center_x}\n              center_y={this.center_y}\n              inner_radius={this.inner_radius}\n              outer_radius={this.outer_radius}\n            />\n          </Layer>\n          {this.props.white\n            ? <Layer>\n                <Line\n                  points={[\n                    this.center_x,\n                    this.center_y - this.outer_radius,\n                    this.center_x,\n                    this.center_y - this.inner_radius\n                  ]}\n                  stroke=\"black\"\n                  strokeWidth={3}\n                />\n              </Layer>\n            : <SaturationControl\n                center_x={this.center_x}\n                center_y={this.center_y}\n                inner_radius={this.inner_radius}\n                outer_radius={this.outer_radius}\n                onDragMove={::this.drag_saturation}\n                refs={this.extra_refs}\n                on={this.state.on}\n                hue={this.tweener.getTweeningValue(\"hue\")}\n                saturation={this.state.saturation}\n              />}\n        </Stage>\n      </div>\n    );\n  }\n}\n","import { call, spawn, cancel, fork, put, take, race } from \"redux-saga/effects\";\nimport { eventChannel, channel, END, delay } from \"redux-saga\";\nimport { createAction, createReducer } from \"redux-act\";\nimport uuidv4 from \"uuid/v4\";\n\nclass WSStateKls {\n  Loading = createAction(\"Starting to open connection\");\n  Error = createAction(\"Got an error connecting to the websocket\");\n  Connected = createAction(\"Successfully connected to the websocket\");\n  ServerTime = createAction(\"Got a new server time from the server\", time => ({\n    time\n  }));\n\n  reducer() {\n    return createReducer(\n      {\n        [this.Loading]: (state, payload) => {\n          return { ...state, loading: true };\n        },\n        [this.Error]: (state, { error }) => {\n          return { ...state, error, loading: true };\n        },\n        [this.Connected]: (state, payload) => {\n          return { ...state, error: undefined, loading: false };\n        }\n      },\n      {\n        error: undefined,\n        devices: {},\n        loading: true\n      }\n    );\n  }\n}\n\nexport const WSState = new WSStateKls();\n\nexport const WSCommand = createAction(\n  \"Command to the websocket server\",\n  (path, body, { onsuccess, onerror, onprogress, timeout, original }) => ({\n    path,\n    body,\n    onsuccess,\n    onerror,\n    onprogress,\n    timeout,\n    original\n  })\n);\n\nfunction* maybeTimeoutMessage(actions, messageId) {\n  var action = actions[messageId];\n  yield call(delay, action.timeout || 5000);\n  try {\n    var response = action.onerror({\n      error: \"Timedout waiting for a reply to the message\",\n      error_code: \"Timedout\"\n    });\n  } finally {\n    if (response) {\n      // finally block to make sure the response we made is sent if we get cancelled\n      yield put(response);\n      delete actions[messageId];\n    }\n  }\n}\n\nfunction* sendToSocket(socket, sendch, actions) {\n  while (true) {\n    var action = yield take(sendch);\n    if (socket.readyState === 1) {\n      socket.send(JSON.stringify(action.data));\n    } else {\n      try {\n        var response = action.onerror({\n          error: \"Connection to the server wasn't active\",\n          error_code: \"InactiveConnection\"\n        });\n      } finally {\n        // We use a finally block to make sure the response is dispatched\n        // if this saga gets cancelled\n        if (response) {\n          yield put(response);\n          delete actions[action.messageId];\n        }\n      }\n    }\n  }\n}\n\nfunction* tickMessages(socket) {\n  while (true) {\n    yield call(delay, 15000);\n    if (socket.readyState === 1) {\n      socket.send(JSON.stringify({ path: \"__tick__\" }));\n    }\n  }\n}\n\nfunction* startWS(url, count, sendch, receivech, actions) {\n  var socket = new WebSocket(url);\n\n  var onerrors = [];\n  var oncloses = [];\n\n  var ws = new Promise((resolve, reject) => {\n    socket.onopen = () => {\n      resolve(socket);\n    };\n\n    socket.onmessage = event => receivech.put(event);\n\n    socket.onerror = evt => {\n      console.error(\"Websocket got error\", evt);\n      reject(evt);\n    };\n\n    socket.onclose = evt => {\n      console.error(\"Websocket closed\", evt);\n      reject(evt);\n      oncloses.map(cb => {\n        try {\n          cb(evt);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    };\n  });\n\n  var start = Date.now();\n\n  try {\n    var { timeout, w } = yield race({ timeout: call(delay, 2000), w: ws });\n  } catch (e) {\n    console.error(\"Failed to start websocket connection\", e);\n    yield put(\n      WSState.Error({\n        error: {\n          error: \"Could not connect to server\",\n          error_code: \"FailedToConnected\"\n        }\n      })\n    );\n    var diff = Date.now() - start;\n    if (diff < 1000) {\n      yield call(delay, 1000 - diff);\n    }\n    return;\n  }\n\n  if (timeout) {\n    console.error(\"timed out waiting for websocket\");\n    socket.close();\n    return false;\n  }\n\n  var waiter = yield call(channel);\n  var ticker = yield fork(tickMessages, w);\n  var sender = yield fork(sendToSocket, w, sendch, actions);\n\n  oncloses.push(() => {\n    waiter.put(END);\n  });\n\n  try {\n    yield put(WSState.Connected());\n    yield take(waiter);\n  } finally {\n    yield put(\n      WSState.Error({\n        error: { error: \"Server went away\", error_code: \"ServerWentAway\" }\n      })\n    );\n    waiter.close();\n    yield cancel(ticker);\n    yield cancel(sender);\n  }\n}\n\nfunction* processWsSend(commandch, sendch, actions, defaultonerror) {\n  var normalise = (\n    messageId,\n    { path, body, onerror, onsuccess, onprogress, original, timeout }\n  ) => {\n    var done = false;\n\n    var create = (cb, msg) => {\n      try {\n        return cb(msg);\n      } catch (e) {\n        console.error(e);\n        try {\n          return defaultonerror({\n            error_code: \"INTERNAL_ERROR\",\n            error: e.toString()\n          });\n        } catch (e2) {\n          console.error(e2);\n        }\n      }\n    };\n\n    var data = { path, body, message_id: messageId };\n    var doerror = error => {\n      if (done) {\n        return;\n      }\n\n      done = true;\n      if (onerror) {\n        return create(onerror, { ...error, messageId, original });\n      }\n    };\n\n    var dosuccess = (data, msgid) => {\n      if (done) {\n        return;\n      }\n\n      done = true;\n      if (onsuccess) {\n        return create(onsuccess, { messageId, data, original });\n      }\n    };\n\n    var doprogress = progress => {\n      if (onprogress) {\n        return create(onprogress, { messageId, progress, original });\n      }\n    };\n\n    return {\n      data,\n      messageId,\n      timeout: timeout,\n      onsuccess: dosuccess,\n      onerror: doerror,\n      onprogress: doprogress\n    };\n  };\n\n  while (true) {\n    var { payload } = yield take(commandch);\n    var messageId = uuidv4();\n    var normalised = normalise(messageId, payload);\n    actions[messageId] = normalised;\n    normalised.timeouter = yield spawn(maybeTimeoutMessage, actions, messageId);\n    yield put(sendch, normalised);\n  }\n}\n\nfunction* processWsReceive(receivech, actions) {\n  var makeResponse = (action, data) => {\n    if (data.reply) {\n      if (data.reply.progress) {\n        return action.onprogress(data.reply.progress);\n      } else if (data.reply.error) {\n        return action.onerror(data.reply);\n      } else {\n        return action.onsuccess(data.reply, data.message_id);\n      }\n    }\n\n    if (data.error) {\n      return action.onerror(data.error);\n    }\n  };\n\n  while (true) {\n    var { data } = yield take(receivech);\n    try {\n      data = JSON.parse(data);\n    } catch (e) {\n      console.error(\"failed to parse json from the server\", e);\n      continue;\n    }\n\n    if (!data.message_id) {\n      console.error(\"Got a message from the server without a message id\", data);\n      continue;\n    }\n\n    if (data.message_id == \"__tick__\") {\n      continue;\n    }\n\n    if (data.message_id == \"__server_time__\") {\n      yield put(WSState.ServerTime(data.reply));\n      continue;\n    }\n\n    var action = actions[data.message_id];\n\n    if (!action) {\n      console.error(\n        \"Got a message from the server with unknown message id\",\n        data.message_id,\n        data\n      );\n      continue;\n    }\n\n    if (action.timeouter) {\n      yield cancel(action.timeouter);\n    }\n\n    let response = undefined;\n    try {\n      response = makeResponse(action, data);\n    } finally {\n      // Really make sure we put our response\n      // This is because once the response is made,\n      // no other response can be made\n      if (response) {\n        yield put(response);\n      }\n    }\n\n    // Finished with this message if not a progress message\n    if (response && (!data.reply || !data.reply.progress)) {\n      delete actions[data.message_id];\n    }\n  }\n}\n\nexport function* getWSCommands(commandch) {\n  while (true) {\n    var nxt = yield take(WSCommand);\n    yield put(commandch, nxt);\n  }\n}\n\nexport function* listen(url, defaultonerror, delayMS) {\n  var count = 0;\n  var messages = {};\n  var sendch = yield call(channel);\n  var receivech = yield call(channel);\n  var commandch = yield call(channel);\n\n  if (defaultonerror === undefined) {\n    defaultonerror = e => console.error(e);\n  }\n\n  // This is outside the while true so that we don't miss messages\n  // when the server goes away and before we've started processWsSend again\n  yield fork(getWSCommands, commandch);\n\n  while (true) {\n    yield put(WSState.Loading());\n\n    count += 1;\n    var actions = {};\n    messages[count] = actions;\n    var sendprocess = yield fork(\n      processWsSend,\n      commandch,\n      sendch,\n      actions,\n      defaultonerror\n    );\n    var receiveprocess = yield fork(processWsReceive, receivech, actions);\n    yield call(startWS, url, count, sendch, receivech, actions);\n    yield cancel(sendprocess);\n    yield cancel(receiveprocess);\n\n    var ids = Object.keys(actions);\n    for (var i = 0; i < ids.length; i++) {\n      var action = actions[ids[i]];\n      if (action.timeouter) {\n        yield cancel(action.timeouter);\n      }\n\n      var response = action.onerror({\n        error: \"Lost connection to the server\",\n        error_code: \"LostConnection\"\n      });\n      if (response) {\n        yield put(response);\n      }\n    }\n\n    delete messages[count];\n    yield call(delay, delayMS || 5000);\n  }\n}\n"],"mappingstJA;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAAA;AACA;AAOA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AATA;AAkBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAVA;AADA;AAnBA;AAoCA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAxCA;AADA;AACA;AAgDA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AANA;AADA;AAHA;AADA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;AClGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAAA;AACA;AAMA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AAPA;AADA;AADA;AAHA;AADA;AACA;AAuBA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAAA;AACA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAPA;AADA;AACA;AAkBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AC0CA;AACA;AAvFA;AACA;AACA;AACA;AAAA;AACA;AAgDA;AAiBA;AAiBA;AACA;;;;;AAlFA;;;;AACA;AAAA;AACA;AADA;AAAA;AAGA;AAEA;AAAA;AACA;AADA;AAAA;AAGA;AAEA;AACA;;;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAOA;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAAA;AASA;AACA;AAFA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAAA;AASA;AACA;AAFA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AANA;AASA;AACA;AAAA;AACA;AADA;AAtBA;AADA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;;;;;;;;;;;;;;AC9GA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAyBA;AACA;AACA;AA1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAtBA;AAAA;AACA;AA0BA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AARA;AADA;AAcA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAnBA;AADA;AAwBA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACyKA;AACA;AA3LA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAmHA;AAoBA;AA8CA;AACA;;;;;AArLA;;;;AACA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAgBA;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAIA;AACA;AACA;AANA;AAAA;AAYA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AA9BA;AAAA;AAmCA;AACA;AAFA;AACA;AAnCA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AC1LA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAEA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;;;AAGA;AAUA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;;;;;;AApKA;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AAlBA;;;;;;;;;;;;AA6BA;AACA;AAoBA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAMA;AACA;AATA;AArBA;AAkCA;;;;AArDA;AACA;AAuDA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAfA;AA4BA;;;;AA1FA;AACA;AA4FA;;;;;;;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAXA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AAJA;AAnBA;AA0BA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AADA;AA/CA;AADA;AA6DA;;;;AA3FA;AACA;AA6FA;;;;;;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAMA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAnBA;AAiDA;;;;AAzEA;AACA;AA2EA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA6BA;AACA;;;AAoCA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AALA;AARA;AADA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAfA;AA2BA;AACA;AAAA;AACA;AACA;AAMA;AACA;AARA;AADA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AArDA;AApBA;AAuFA;;;AApRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;;;;AAjEA;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAOA;AACA;AA9UA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AA8CA;AAiBA;AAuBA;AASA;AAiFA;AAwEA;AA0EA;AAOA;AACA;;;;;AAzUA;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;;;;;AAIA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAHA;AAMA;;;;;;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AACA;AAFA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAYA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAGA;AAJA;AAAA;AACA;AADA;AAAA;AAOA;AACA;AACA;AAFA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAgBA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA/BA;AAAA;AAAA;AACA;AADA;AAAA;AAkCA;AAAA;AAlCA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAmCA;AApCA;AAAA;AAuCA;AACA;AACA;AAFA;AADA;AACA;AAvCA;AA6CA;AACA;AA9CA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAoDA;AACA;AAtDA;AACA;AADA;AAAA;AAAA;AACA;AADA;AA0DA;AA1DA;AAAA;AACA;AADA;AA2DA;AA3DA;AAAA;AACA;AADA;AA4DA;AACA;AACA;AAAA;AACA;AACA;AACA;AAjEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAwEA;AADA;AACA;AAxEA;AA2EA;AA3EA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AA7DA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AA+DA;AACA;AACA;AACA;AAAA;AAlEA;AAAA;AACA;AADA;AAmEA;AAnEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAkBA;AAlBA;AACA;AAmBA;AApBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAqBA;AAtBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AA0BA;AA3BA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAwCA;AACA;AAzCA;AAAA;AAAA;AAAA;AACA;AA0CA;AA3CA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAuDA;AAvDA;AACA;AAwDA;AACA;AA1DA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AAkEA;AACA;AACA;AACA;AAtEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAyEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAZA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AAiBA;AACA;AACA;AAAA;AApBA;AAAA;AACA;AADA;AAqBA;AArBA;AAAA;AACA;AADA;AA4BA;AA5BA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAiCA;AACA;AACA;AAnCA;AAAA;AAAA;AAAA;AAAA;AACA;AAkCA;AACA;AApCA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAwCA;AACA;AACA;AAFA;AACA;AAzCA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAkCA;AAlCA;AAAA;AACA;AADA;AACA;AAgDA;AAjDA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;A","sourceRoot":""}